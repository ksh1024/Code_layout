/**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 */
fun main() {
    println("Hello, world!!!")
    
    var myCar1:Car=Car("빨강",0)
  
    var myCar2:Car=Car("파랑",0)

    var myCar3:Car=Car("초록",0)
    
    println("생산된 차의 대수(정적 필드) ==> "+Car.carCount)
    println("생산된 차의 대수(정적 메소드) ==> "+Car.currentCarCount())
    println("차의 최고 제한 속도 ==> "+Car.MAXSPEED)
    
    println("PI의 값==>"+Math.PI)
    println("3의 제곱==> "+Math.pow(3.0,5.0))
 
    myCar1.upSpeed(50)
    println("자동차1의 색상은 "+myCar1.color+"이며, 속도는 "+myCar1.speed+"km입니다.");
    myCar2.upSpeed(20)
    println("자동차2의 색상은 "+myCar2.color+"이며, 속도는 "+myCar2.speed+"km입니다.");
    myCar3.upSpeed(250)
    println("자동차3의 색상은 "+myCar3.color+"이며, 속도는 "+myCar3.speed+"km입니다.");
    
    
    var auto:Automobile=Automobile()
    auto.upSpeed(250)
    println("승용차의 속도는 "+auto.speed+"km입니다.")
}
open class Car{
    var color : String = ""
    var speed : Int = 0
    companion object{
        var carCount:Int=0
        const val MAXSPEED:Int=200
        const val MINSPEED:Int=0
        fun currentCarCount():Int{
            return carCount
        }
    }
    
    constructor(color:String,speed:Int){ //기본생성자로 객체 생성을 할 수 없게됨
        this.color=color
        this.speed=speed
        carCount ++
    }
    constructor(speed:Int){
        this.speed=speed
    }
    constructor(){
        
    }
    
    open fun upSpeed(value:Int){
        if (speed+value>=200) //200이 넘지 않게
        	speed=200
        else 
        	speed=speed+value
    }
    fun downSpeed(value:Int){
        if(speed-value<=0)
        	speed=0
        else
        	speed=speed-value
    }
}

class Automobile:Car{ //Car를 상속받음
    var seatNum:Int=0
    
    constructor(){
        
    }
    fun countSeatNum():Int{
        return seatNum
    }
    
    override fun upSpeed(value:Int){
        if(speed+value>=300)
        	speed=300
        else
        	speed=speed+value
    }
}

